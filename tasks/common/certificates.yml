---

- name: Ensure directory exists for local self-signed TLS certs
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ etcd.data.ssl.dir }}"
    - "{{ etcd.data.ssl.dir }}/ca"
    - "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}"

- name: Create local certificates directory
  become: false
  local_action:
    module: file
    state: directory
    path: certificates/etcd
    recurse: true

- name: Generate CA private key
  become: false
  local_action:
    module: openssl_privatekey
    path: certificates/etcd/ca.key
  tags:
    - certificates
    - ca

## Key usage, as defined in RFC-3280 ( http://www.ietf.org/rfc/rfc3280.txt ), 4.2.1.3 section
- name: Generate CA CSR
  become: false
  local_action:
    module: openssl_csr
    state: present
    path: certificates/etcd/ca.csr
    privatekey_path: certificates/etcd/ca.key
    common_name: Ansible
    basic_constraints:
      - CA:true
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
      - cRLSign
    key_usage_critical: true
    extended_key_usage:
      - clientAuth
      - serverAuth
    force: false
  tags:
    - certificates
    - ca

- name: Generate a Self Signed CA certificate
  become: false
  local_action:
    module: openssl_certificate
    state: present
    path: certificates/etcd/ca.pem
    privatekey_path: certificates/etcd/ca.key
    csr_path: "certificates/etcd/ca.csr"
    provider: selfsigned
    force: false
  tags:
    - certificates
    - ca

- name: Copy generated CA files
  copy: 
    src: "{{ item }}"
    dest: "{{ etcd.data.ssl.dir }}/ca"
  with_items:
    - certificates/etcd/ca.pem
    - certificates/etcd/ca.key
  tags:
    - certificates
    - ca

- name: Generate CLIENT private key
  openssl_privatekey:
    path: "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}/privkey.pem"
  tags:
    - certificates
    - client

- name: Generate CLIENT certificate CSR
  openssl_csr:
    path: "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}/cert.csr"
    privatekey_path: "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}/privkey.pem"
    common_name: "{{ ansible_hostname }}"
    subject_alt_name:
      - "IP:{{ hostvars[inventory_hostname]['ansible_%s' | format(etcd.network.interface)].ipv4.address }}"
      - "DNS:{{ ansible_hostname }}"
    basic_constraints:
      - CA:false
    basic_constraints_critical: true
    extended_key_usage:
      - clientAuth
      - serverAuth
    force: false
  tags:
    - certificates
    - client

- name: Generate CLIENT certificate
  openssl_certificate:
    path: "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}/fullchain.pem"
    csr_path: "{{ etcd.data.ssl.dir }}/{{ ansible_hostname }}/cert.csr"
    ownca_path: "{{ etcd.data.ssl.dir }}/ca/{{ etcd.data.ssl.ca.cert }}"
    ownca_privatekey_path: "{{ etcd.data.ssl.dir }}/ca/{{ etcd.data.ssl.ca.key }}"
    provider: ownca
    force: false
  tags:
    - certificates
    - client
