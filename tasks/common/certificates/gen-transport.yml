---

- name: Generate client transport certificate private key
  become: false
  local_action:
    module: openssl_privatekey
    path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_key }}"
  tags:
    - certificates
    - transport

- name: Generate client certificate CSR
  become: false
  local_action:
    module: openssl_csr
    path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_csr }}"
    privatekey_path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_key }}"
    common_name: "{{ etcd_cluster_name }}"
    #subject_alt_name: "{{ groups[etcd_hosts_group] | map('regex_replace', '^', 'DNS:') | list }}"
    subject_alt_name: "{% for node in groups[etcd_hosts_group] %}IP:{{ hostvars[node]['ansible_%s' | format(etcd_network_interface)].ipv4.address }}{% if loop.index < groups[etcd_hosts_group]|length %},{% endif %}{% endfor %}"
    basic_constraints:
      - CA:false
    basic_constraints_critical: true
    force: false
  tags:
    - certificates
    - transport

- name: Generate peer certificate
  become: false
  local_action:
    module: openssl_certificate
    path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_cert }}"
    csr_path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_csr }}"
    ownca_path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_ca_cert }}"
    ownca_privatekey_path: "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_ca_key }}"
    provider: ownca
    force: false
  tags:
    - certificates
    - transport

- name: Copy generated peer certificate files
  copy: 
    src: "{{ item }}"
    dest: "{{ etcd_data_ssl_dir }}/{{ etcd_data_ssl_transport_dir }}"
  with_items:
    - "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_cert }}"
    - "{{ etcd_ssl_local_dir }}/{{ etcd_data_ssl_transport_key }}"
  tags:
    - certificates
    - ca
  